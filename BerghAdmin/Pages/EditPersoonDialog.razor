@page "/edit-person-dialog"

@using BerghAdmin.DbContexts;
@using BerghAdmin.Pages
@using BerghAdmin.Services
@using BerghAdmin.Services.Evenementen

@using Microsoft.EntityFrameworkCore;

@using Syncfusion.Blazor.Popups

@using System.Collections;
@using System.Collections.Generic
@using System.Linq
@using System.Security.Claims

@using BerghAdmin.Data

@inject IServiceScopeFactory _scopeFactory
@inject IPersoonService _persoonService
@inject IRolService _rolService
@inject IEvenementService _evenementService
@inject ILogger<EditPersoonDialog> _logger

@attribute [Authorize(Policy = "IsAnyRole")]

<div id="EditPersoonDialogTarget">

    <SfDialog Target="#EditPersoonDialogTarget" 
              Width="1000px" 
              IsModal="true" 
              ShowCloseIcon="true" 
              @bind-Visible="@IsVisible">
        @* <DialogEvents OnOverlayModalClick="@OnDialogOverlayClick" /> *@
        <DialogTemplates>
            <Header>@headerText</Header>
            <Content>
                <EditForm Model="@_currentPersoon" OnValidSubmit="@ValidSubmit">
                    <DataAnnotationsValidator />
                    <table>
                        <tr>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Voorletters:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Voorletters"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Voornaam:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Voornaam"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Tussenvoegsel:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Tussenvoegsel"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Achternaam:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Achternaam"></SfTextBox>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Adres:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Adres"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Postcode:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Postcode"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Woonplaats:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Plaats"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Land:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Land"></SfTextBox>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Geboortedatum:</label>
                                    <SfDatePicker @bind-Value="@_currentPersoon.GeboorteDatum"></SfDatePicker>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Geslacht:</label>
                                    <SfDropDownList TValue="GeslachtEnum" TItem="GeslachtFields" DataSource="@geslachtValues" @bind-Value="@_currentPersoon.Geslacht">
                                        <DropDownListFieldSettings Value="GeslachtValue"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Kledingmaten:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.KledingMaten"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Nummer:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Nummer"></SfTextBox>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Telefoon:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Telefoon"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Mobiel:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.Mobiel"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Email:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.EmailAdres"></SfTextBox>
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Email extra:</label>
                                    <SfTextBox @bind-Value="@_currentPersoon.EmailAdresExtra"></SfTextBox>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Is Verwijderd:</label>
                                    <SfCheckBox TChecked="bool" @bind-Checked="@_currentPersoon.IsVerwijderd" />
                                </div>
                            </td>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Is Reserve:</label>
                                    <SfCheckBox TChecked="bool" @bind-Checked="@_currentPersoon.IsReserve" />
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Rollen:</label>
                                    <SfListBox @ref="_rollenListBox"
                                               TValue="HashSet<Rol>" 
                                               DataSource="@_alleRollen" 
                                               TItem="Rol" 
                                               ValueExpression="@(() => _currentPersoon.Rollen)"
                                               ValueChanged="@((HashSet<Rol> v) => _currentPersoon.Rollen = v)">
                                        <ListBoxFieldSettings Text="Beschrijving" Value="Id" />
                                        <ListBoxEvents TItem="Rol" TValue="int[]" OnActionComplete="UpdateRollen" />
                                        <ListBoxSelectionSettings ShowCheckbox="true" />
                                    </SfListBox>
                                </div>
                            </td>
                            <td colspan="2" valign="top">
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Fietstochten:</label>
                                    <SfListBox @ref="_fietsTochtenListBox"
                                               TValue="ICollection<Evenement>" 
                                               DataSource="@_alleFietsTochten" 
                                               TItem="FietsTocht"
                                               ValueExpression="@(() => _currentPersoon.FietsTochten)"
                                               ValueChanged="@((ICollection<Evenement> v) => _currentPersoon.FietsTochten = v)">
                                          <ListBoxFieldSettings Text="Titel" Value="Id" />
                                          <ListBoxEvents TItem="FietsTocht" TValue="int[]" OnActionComplete="UpdateFietsTochten" />
@*                                        <ListBoxEvents TItem="FietsTocht" TValue="int[]" Created="CreatedFietsTochtenListBox" OnActionComplete="UpdateFietsTochten" />
 *@                                       <ListBoxSelectionSettings ShowCheckbox="true" />
                                    </SfListBox>
                                </div>
                            </td>
                            <td valign="top">
                                <div class="form-group col-md-12">
                                    <label class="col-form-label">Kentaa donatiebedrag:</label>
                                    <SfTextBox Value="@_currentPersoon.GetDonatieBedrag.ToString()" TValue="decimal?"></SfTextBox>
                                </div>
                            </td>
                        </tr>
                        <div class="form-group">
                            <SfButton Type="submit" CssClass="e-flat" IsToggle="true" IsPrimary="true" Content="Opslaan en sluiten"></SfButton>
                            <SfButton Type="button" CssClass="e-flat" IsToggle="false " IsPrimary="false" Content="Afbreken" OnClick="@OnDialogClose"></SfButton>
                        </div>
                    </table>
                </EditForm>
            </Content>
        </DialogTemplates>
    </SfDialog>

</div>

@code {

    [Parameter]
    public bool IsVisible { get; set; } = false;

    private int _persoonId;
    private SfGrid<Persoon> _originatingGrid;
    private Persoon _currentPersoon { get; set; } = new Persoon();
    private List<Rol> _alleRollen = new List<Rol>();
    private IEnumerable<FietsTocht> _alleFietsTochten = Enumerable.Empty<FietsTocht>();
    private bool IsNewPersoon() { return _persoonId == 0; }
    private PersonenComponent _personenComponent;
    //    private IPersoonService _persoonService;
    //    private IRolService _rolService;
    //    private IEvenementService _evenementService;
    private IServiceScope _scope;
    //    private IDbContextFactory<ApplicationDbContext> _dbContextFactory;
    SfListBox<HashSet<Rol>, Rol> _rollenListBox;
    SfListBox<ICollection<Evenement>, FietsTocht> _fietsTochtenListBox; 
    public string? headerText;
    public class GeslachtFields
    {
        public GeslachtEnum GeslachtValue { get; set; }
        public string GeslachtText { get; set; } = "";
    }
    public List<GeslachtFields> geslachtValues = new List<GeslachtFields>()
    {
        new GeslachtFields() { GeslachtValue = GeslachtEnum.Man, GeslachtText = GeslachtEnum.Man.ToString() },
        new GeslachtFields() { GeslachtValue = GeslachtEnum.Vrouw, GeslachtText = GeslachtEnum.Vrouw.ToString() },
        new GeslachtFields() { GeslachtValue = GeslachtEnum.Onbekend, GeslachtText = GeslachtEnum.Onbekend.ToString() }
    };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _logger.LogDebug($"Initialize EditPersoonDialoog; threadid={Thread.CurrentThread.ManagedThreadId}");
    }

    private void OnDialogClose()
    {
        IsVisible = false;
        this.StateHasChanged();
    }

    public void UpdateFietsTochten(ActionCompleteEventArgs<FietsTocht> args)
    {
        // You can customize your code here.
    }

    public void UpdateRollen(ActionCompleteEventArgs<Rol> args)
    {
        // You can customize your code here.
    }

    private void CreatedFietsTochtenListBox()
    {
        _fietsTochtenListBox?.EnableItems(_currentPersoon.FietsTochten, true);
    }

    private void CreatedRollenListBox()
    {
        _rollenListBox?.EnableItems(_currentPersoon.Rollen, true);
    }

    //
    // Called externally to show the dialog
    //
    public void ShowDialog(int persoonId, SfGrid<Persoon> originatingGrid)
    {
        //        _persoonService = serviceProvider.GetRequiredService<IPersoonService>();
        //        _rolService = serviceProvider.GetRequiredService<IRolService>();
        //        _evenementService = serviceProvider.GetRequiredService<IEvenementService>();
        _persoonId = persoonId;
        _currentPersoon = _persoonService.GetById(_persoonId, true);
        _alleRollen = _rolService.GetRollen();
        _alleFietsTochten = _evenementService.GetAllFietsTochten();
        _originatingGrid = originatingGrid;
        headerText = IsNewPersoon() ? "Nieuwe persoon toevoegen" : "Wijzig persoon gegevens";
        IsVisible = true;

        // fill selected rollen
        // _selectedRollen = _currentPersoon
        //                     .Rollen
        //                     .Select(r => (int)r.Id)
        //                     .ToArray();

        // fill fietstochten waar persoon deelnemer van is
        // _selectedFietstochten = _currentPersoon
        //                         .IsDeelnemerVan
        //                         .Select(f => (int)f.Id)
        //                         .ToArray();

        // pas active record id
        this.StateHasChanged();
    }

    protected async Task ValidSubmit(EditContext editContext)
    {
        await SavePersoon(_currentPersoon);
        if (IsNewPersoon())
        {
            await _originatingGrid.AddRecordAsync(_currentPersoon);
        }
        else
        {
            await _originatingGrid.SetRowData(_currentPersoon.Id, _currentPersoon);
        }
        this.IsVisible = false;
    }

    private async Task SavePersoon(Persoon persoon)
    {
        await _persoonService.SavePersoonAsync(persoon);
    }

    /// <summary>
    ///
    /// Enumerate all values of the RolTypeEnum and return a list with id, description of
    /// all enum values
    ///
    /// </summary>
    /// <returns></returns>
    // private RolData[] GetAllRolData()
    // {
    //     var rolData = new List<RolData>();

    //     foreach (int rolType in Enum.GetValues(typeof(RolTypeEnum)))
    //     {
    //         if (rolType == 0)
    //         {
    //             value 0 is equivalent to RolTypeEnum.Alle; this rol can not be selected
    //             continue;
    //         }
    //         var isEnumParsed = Enum.TryParse(rolType.ToString(), true, out RolTypeEnum parsedEnumValue);

    //         if (isEnumParsed)
    //         {
    //             rolData.Add(new RolData() { Id = rolType, Text = parsedEnumValue.ToString() });
    //         }
    //     }

    //     return rolData.ToArray<RolData>();
    // }
}

<style>
    .col-form-label {
        padding-top: 1px;
        padding-bottom: 1px;
        color: #8d7f7f;
    }

    .e-listbox-wrapper:not(.e-list-template) .e-list-item, .e-listbox-wrapper .e-list-nrt, .e-listbox-wrapper .e-selectall-parent, .e-listbox-container:not(.e-list-template) .e-list-item, .e-listbox-container .e-list-nrt, .e-listbox-container .e-selectall-parent {
        height: 25px;
        line-height: 1.5;
        padding: 1px 16px 1px 16px;
        position: relative;
    }
</style>