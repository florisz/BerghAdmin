@page "/ApplicatieManagement"
@page "/ApplicatieManagement/personen"

@using BerghAdmin.Authorization
@using BerghAdmin.Data
@using BerghAdmin.General
@using BerghAdmin.Services.Import
@using BerghAdmin.Pages.Personen

@using System.IO
@using Microsoft.AspNetCore.Identity

@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Navigations

@inject IJSRuntime jsRuntime
@inject IImporterServiceFactory factory
@inject SfDialogService DialogService

@attribute [Authorize(Policy = "IsAdministrator")]

<h3>Applicatie Management</h3>

<PersonenComponent RolContext="@rolContext" ToonAlles="true" />
<br/>

<div class="form-group">
    <SfUploader ID="UploadFiles">
        <UploaderEvents ValueChange="OnChangeAsync"></UploaderEvents>
    </SfUploader>
</div>
<ErrorDialog @ref="errorDialog" />

@code
{
    public int[] rolContext = new int[] { };
    private ErrorDialog errorDialog = new();

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await jsRuntime.InvokeAsync<object>("SetSideMenu", "applicatiemanagement");
    }

    private bool IsVisible { get; set; } = false;

    private void OpenDialog()
    {
        this.IsVisible = true;
    }

    private async Task OnChangeAsync(UploadChangeEventArgs args)
    {
        foreach (var file in args.Files)
        {
            if (file.FileInfo.Size > 512000)
            {
                // TO DO: is het nodig om dit te ondervangen?
                throw new Exception("File heeft meer dan 512K bytes");
            }

            var stream = file.File.OpenReadStream();
            if (file.FileInfo.Name.StartsWith("Persoon"))
            {
                var persoonImporter = factory.GetInstance("Persoon");
                await persoonImporter.ImportDataAsync(stream);
            }
            else if (file.FileInfo.Name.StartsWith("Ambassadeur"))
            {
                var ambassadeurImporter = factory.GetInstance("Ambassadeur");
                await ambassadeurImporter.ImportDataAsync(stream);
            }
            else
            {
                await DialogService.AlertAsync("Naam van import file moet beginnen met 'Persoon' of 'Ambassadeur'");
            }
        }
    }
}