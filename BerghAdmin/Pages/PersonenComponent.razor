@using BerghAdmin.Data
@using System.Linq;
@using Syncfusion.Blazor.Buttons

@inject BerghAdmin.Services.IPersoonService persoonService
@inject BerghAdmin.Services.IRolService rolService
@inject NavigationManager NavigationManager

<table>
    <tr>
        <td width="20%">Overzicht van:&nbsp</td>
        <td width="80%">
            <SfMultiSelect 
                    TValue="RolTypeEnum[]" 
                    TItem="Rol"
                    ClosePopupOnSelect="false" 
                    @bind-Value="@RolContext" 
                    Placeholder="e.g Ambassadeur, Fietser, Golfer"  
                    Mode="VisualMode.Box" 
                    DataSource="@rollenList"
                    Width="700px"
                    ShowDropDownIcon="true" 
                    ModelType="typeof(Rol)" >
                <MultiSelectFieldSettings Value="Id" Text="Beschrijving"></MultiSelectFieldSettings>
                <MultiSelectTemplates TItem="Rol">
                    <ItemTemplate>
                        @{
                            var contextValue = (context as Rol);
                            bool isChecked = RolContext != null ? RolContext.Contains(contextValue.Id) : false;

                            <span>
                                <SfCheckBox TChecked="bool" @bind-checked="@isChecked"></SfCheckBox>
                                @contextValue.Beschrijving
                            </span>
                        }
                    </ItemTemplate>
                </MultiSelectTemplates>
                <MultiSelectEvents 
                    TItem="Rol" 
                    TValue="RolTypeEnum[]" 
                    OnValueSelect="@OnValueSelectHandler"
                    ValueRemoved="@ValueRemovedHandler"
                    Cleared="@ClearedHandler">
                </MultiSelectEvents>
            </SfMultiSelect>
        </td>
    </tr>
</table>

<br/>

<span> The selected row index is : @SelectedValue </span>

<br/>

<SfGrid @ref="@PersonenGrid" 
        DataSource="@personenList" 
        AllowPaging="true" 
        AllowResizing="true" 
        AllowSelection="true" 
        ShowColumnMenu="true" >
    <GridEditSettings 
        AllowAdding="true" 
        AllowDeleting="true" 
        AllowEditing="true" 
        Mode="EditMode.Dialog" 
        AllowEditOnDblClick="true">
    </GridEditSettings>
    <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple" PersistSelection="true"></GridSelectionSettings>
    <GridEvents RowSelected="GetSelectedRecords" TValue="Persoon"></GridEvents>
    <GridColumns>
        <GridColumn Type="ColumnType.CheckBox" Width="25"></GridColumn>
        <GridColumn Field=@nameof(Persoon.VolledigeNaam) HeaderText="Naam" TextAlign="TextAlign.Left"  Width="110"></GridColumn>
        <GridColumn Field=@nameof(Persoon.GeboorteDatum) HeaderText="Geb.datum" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Left"  Width="70"></GridColumn>
        <GridColumn Field=@nameof(Persoon.Mobiel) HeaderText="Mobiel" TextAlign="TextAlign.Left"  Width="70"></GridColumn>
        <GridColumn Field=@nameof(Persoon.EmailAdres) HeaderText="Email" TextAlign="TextAlign.Left"  Width="120"></GridColumn>
        <GridColumn Field=@nameof(Persoon.GetRollenAsString) HeaderText="Rollen" TextAlign="TextAlign.Left"  Width="200"></GridColumn>
    </GridColumns>
</SfGrid>


@code{
    [Parameter]
    public RolTypeEnum[] RolContext { get; set; }

    public List<RolTypeEnum> selectedRollen;
    public List<Persoon> personenList = new List<Persoon>();
    public List<Rol> rollenList = new List<Rol>();
    SfGrid<Persoon> PersonenGrid;
    public List<double> SelectedRowIndexes { get; set; }
    public double[] TotalValue { get; set; }
    public string SelectedValue;        

    protected override void OnInitialized()
    {
        base.OnInitialized();
        selectedRollen = RolContext.ToList<RolTypeEnum>();
        rollenList = GetRollen();
        RefreshList();
    }

    private void ValueRemovedHandler(Syncfusion.Blazor.DropDowns.RemoveEventArgs<Rol> args) 
    { 
        selectedRollen.Remove(args.ItemData.Id);
        RefreshList();
    } 

    private void OnValueSelectHandler(Syncfusion.Blazor.DropDowns.SelectEventArgs<Rol> args) 
    { 
        selectedRollen.Add(args.ItemData.Id);
        RefreshList();
    } 

    private void ClearedHandler(MouseEventArgs args)
    {
        selectedRollen = new List<RolTypeEnum>();
        RefreshList();
    }

    public async Task GetSelectedRecords(RowSelectEventArgs<Persoon> args)
    {
        SelectedRowIndexes = await this.PersonenGrid.GetSelectedRowIndexes();
        TotalValue = SelectedRowIndexes.ToArray();
        SelectedValue = "";
        foreach (var data in TotalValue)
        {
            SelectedValue = SelectedValue + " " + data;
        }
        StateHasChanged();
    }
        private void RefreshList()
    {
        // refresh with value from multiselect dropdown box
        if (selectedRollen == null || selectedRollen.Count<RolTypeEnum>() == 0)
            personenList = new List<Persoon>();
        else 
            personenList = GetPersonen(selectedRollen).OrderBy(p => p.Achternaam).ToList<Persoon>();
    }

    private List<Persoon> GetPersonen(List<RolTypeEnum> rolTypes)
    {
        var personen = new List<Persoon>();

        var currentRollen = rollenList
                            .Where(r => rolTypes.Contains(r.Id))
                            .ToList<Rol>();

        personen = persoonService
                    .GetPersonen()
                    .Where(p => p.Rollen.FirstOrDefault(r => rolTypes.Contains(r.Id) ) != null)
                    .ToList<Persoon>();

        return personen;
    }

    private List<Rol> GetRollen()
    {
        var rollenList = rolService
                        .GetRollen()
                        .OrderBy(r => r.Beschrijving)
                        .ToList<Rol>();
        return rollenList;
    }

}