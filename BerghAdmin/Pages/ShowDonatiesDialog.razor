@page "/show-donaties-dialog"

@using BerghAdmin.Authorization
@using BerghAdmin.Services.Donaties
@using Syncfusion.Blazor.Popups
@using BerghAdmin.Services

@inject IDonatieService DonatieService

@attribute [Authorize(Policy = "IsBeheerFietsers")]

<div id="ShowDonatiesDialogTarget">
    <SfDialog Target="#ShowDonatiesDialogTarget" Width="1000px" IsModal="true" ShowCloseIcon="true" @bind-Visible="@IsVisible">
        <DialogEvents OnOverlayModalClick="@OnOverlayModalClick" Opened="@DialogOpen">
        </DialogEvents>
        <DialogTemplates>
            <Header>Donaties voor: @NaamPersoon</Header>
            <Content>
                <SfGrid DataSource="@DonatieList">
                    <GridColumns>
                        <GridColumn Field=@nameof(Donatie.Id) HeaderText="Id" TextAlign="TextAlign.Left"  Width="60"></GridColumn>
                        <GridColumn Field=@nameof(Donatie.DatumTijd) HeaderText="Datum/Tijd" Format="dd/MM/yyyy hh:mm:ss" Type="ColumnType.Date" TextAlign="TextAlign.Left"  Width="70"></GridColumn>
                        <GridColumn Field=@nameof(Donatie.Bedrag) HeaderText="Bedrag" TextAlign="TextAlign.Left"  Width="170"></GridColumn>
                    </GridColumns>
                </SfGrid>
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton Content="Close" IsPrimary="false" OnClick="@DialogClose" />
        </DialogButtons>
    </SfDialog>

</div>

@code {
    [Parameter]
    public bool IsVisible { get; set; } = false;
    public Persoon Persoon { get; set; } = null;
    private string NaamPersoon;
    public IEnumerable<Donatie> DonatieList { get; set; }

    public void DialogOpen()
    {
        IsVisible = true;
        NaamPersoon = Persoon.VolledigeNaam;
        DonatieList = Persoon.Donaties;
        this.StateHasChanged();
    }

    private void OnOverlayModalClick(OverlayModalClickEventArgs arg)
    {
        this.IsVisible = false;
    }

    private void DialogClose()
    {
        IsVisible = false;
        this.StateHasChanged();
    }
} 

