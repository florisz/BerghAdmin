@page "/ApplicatieManagement/users"

@using BerghAdmin.Authorization
@using BerghAdmin.Data
@using BerghAdmin.General

@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations

@inject BerghAdmin.Services.UserManagement.IUserService userService

@attribute [Authorize(Policy = "IsAdministrator")]

<SfToolbar>
    <ToolbarItems>
        <ToolbarItem Text="Add" SuffixIcon="e-icons circle-add" Align="ItemAlign.Left" OnClick="AddClick"></ToolbarItem>
        <ToolbarItem Text="Edit" SuffixIcon="e-icons edit" Align="ItemAlign.Left" OnClick="EditClick"></ToolbarItem>
        <ToolbarItem Text="Delete" SuffixIcon="e-icons circle-remove" Align="ItemAlign.Left" OnClick="DeleteClick"></ToolbarItem>
    </ToolbarItems>
</SfToolbar>

<br />

<SfGrid @ref="@UsersGrid" DataSource="@users" AllowPaging="true">
    <GridEvents RowSelecting="SelectUserHandler" TValue="User"></GridEvents>
    <GridColumns>
        <GridColumn Field=@nameof(User.Name) HeaderText="Naam" TextAlign="TextAlign.Left" IsPrimaryKey="true" />
        <GridColumn Field=@nameof(User.UserName) HeaderText="User naam" TextAlign="TextAlign.Left"  Width="120" />
        <GridColumn Field=@nameof(User.Email) HeaderText="EMail adres" TextAlign="TextAlign.Left"  Width="120" />
    </GridColumns>
</SfGrid>
<EditUserDialog @ref="editUserDialog" />
<ErrorDialog @ref="errorDialog" />

@code {
    public List<User> users = new List<User>();
    private EditUserDialog editUserDialog = new();
    private ErrorDialog errorDialog = new();
    SfGrid<User> UsersGrid = new();
    private User _selectedUser = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        GetUsers();
    }

    private void GetUsers()
    {
        users = userService
                    .GetUsers()
                    .ToList<User>();

        if (users == null)
        {
            users = new List<User>();
        }
    }

    private void Save()
    {
        return;
    }

    public void AddClick(ClickEventArgs args) 
    { 
        // the CurrentPersoonId field is not used but can not be null
        editUserDialog.ShowDialog(new User() { CurrentPersoonId = 0 }, UsersGrid);
    } 

    public void EditClick(ClickEventArgs args) 
    {
        if (_selectedUser == null)
        {
            errorDialog.Show("Selecteer eerst een user.");
        }
        else
        {
            editUserDialog.ShowDialog(_selectedUser, UsersGrid);
        }
    } 

    public void DeleteClick(ClickEventArgs args) 
    { 
        errorDialog.Show("Sorry, deze functie bestaat nog niet...");
    } 

    public void SelectUserHandler(RowSelectingEventArgs<User> args)
    {
        _selectedUser = args.Data;
    }

}