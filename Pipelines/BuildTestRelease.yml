trigger:
- master

stages:
- stage: BuildAndTest
  displayName: Build and Test
  pool:
    vmImage: ubuntu-latest
  
  jobs:
  - job: Build_Test_Publish
    displayName: Build, Test and Publish artifacts
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Build code'
      inputs:
        command: 'build'
        arguments: '--configuration release'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'Run unit tests'
      inputs:
        command: 'test'
        projects: '**/*.Tests.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'Create publish artifacts'
      inputs:
        command: 'publish'
        arguments: '-o $(Build.ArtifactStagingDirectory)'
        projects: '**/*.csproj'
        publishWebProjects: false
        zipAfterPublish: true
    - task: PublishBuildArtifacts@1
      displayName: 'Store publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy2Test
  displayName: Deploy to Test
  
  jobs:
  - deployment: 
    displayName: deploy Web App
    environment: Test
    strategy:
      runOnce:
        deploy:
          steps:
          - template: release-bergh-components.yml
            parameters: 
              targetEnvironment: test
  
- stage: SmokeTest
  displayName: Run smoke test
  steps:
  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)/BerghAdmin.UITests.zip'
  - task: ExtractFiles@1
    inputs:
    archiveFilePatterns: '**/BerghAdmin.UITests.zip'
    destinationFolder: './pw'
    cleanDestinationFolder: true
    overwriteExistingFiles: false
  - pwsh: pw/playwright.ps1 install --with-deps
    displayName: Install PlayWright
  - task: DotNetCoreCLI@2
    displayName: 'Run UI tests'
    inputs:
    command: 'test'
    projects: '**/*.UITests.csproj'

- stage: Deploy2Prod
  displayName: Deploy to Prod
  
  jobs:
  - deployment: 
    displayName: deploy Web App
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
          - template: release-bergh-components.yml
            parameters: 
              targetEnvironment: prod
